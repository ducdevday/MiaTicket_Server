version: '3.4'

services:
  miaticket.webapi:
    image: ${DOCKER_REGISTRY-}miaticketwebapi
    build:
      context: .
      dockerfile: MiaTicket.WebAPI/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_HTTPS_PORTS=8081
    - MiaTickConnectionString=${MiaTickConnectionString}
    - MiaTickIssuer=${MiaTickIssuer}
    - MiaTickAudience=${MiaTickAudience}
    - SecretKey=${SecretKey}
    - CloudinaryUrl=${CloudinaryUrl}
    - SmtpServer=${SmtpServer}
    - SmtpPort=${SmtpPort}
    - SmtpEmail=${SmtpEmail}
    - SmtpAppPassword=${SmtpAppPassword}
    - RedisConnectionString=${RedisConnectionString}
    - VNPay_TMNCODE=${VNPay_TMNCODE}
    - VNPay_HashSecret=${VNPay_HashSecret}
    - ZaloPay_Key1=${ZaloPay_Key1}
    - ZaloPay_Key2=${ZaloPay_Key2}
    - RabbitMQConnectionString=${RabbitMQConnectionString}
    - RabbitMQUserName=${RabbitMQUserName}
    - RabbitMQPassword=${RabbitMQPassword}
    ports:
    - "8080:8080"
    - "8081:8081"
    volumes:
    - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
    - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
    - my_network
    depends_on:
    - miaticket.redis
    - miaticket.rabbitmq
      
  miaticket.redis:
    container_name: miaticket.redis
    image: redis:latest
    restart: always
    ports:
    - '6379:6379'
    networks:
    - my_network

  miaticket.rabbitmq:   
    container_name: miaticket.rabbitmq
    image: rabbitmq:4.0.2-management-alpine
    environment: 
    - RABBITMQ_DEFAULT_USER=${RabbitMQUserName}
    - RABBITMQ_DEFAULT_PASS=${RabbitMQPassword}
    ports:
    - '5672:5672'
    - '15672:15672'
    networks:
    - my_network

networks:
  my_network:
    driver: bridge  